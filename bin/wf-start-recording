#!/usr/bin/env bash
# Quick start recording script - primary monitor, default settings

set -Eeuo pipefail

# Lock file to prevent multiple recordings
LOCK_FILE="/tmp/sokratos-recording.lock"
STATE_FILE="/tmp/sokratos-recording.state"

# Default settings
DEFAULT_DIR="${HOME}/Videos/recordings"
PRIMARY_MONITOR="DP-3"
DEFAULT_FPS="30"
CODEC="h264_vaapi"  # AMD GPU acceleration

# Check dependencies
need() {
  command -v "$1" >/dev/null 2>&1 || {
    echo "Missing dependency: $1" >&2
    exit 1
  }
}
need wf-recorder
need hyprctl

# Check if already recording
if [[ -f "$LOCK_FILE" ]]; then
  echo "Recording already in progress! Use sokratos-stop-record to stop."
  exit 1
fi

# Verify primary monitor exists
if ! hyprctl monitors | grep -q "^Monitor $PRIMARY_MONITOR"; then
  echo "Primary monitor $PRIMARY_MONITOR not found!"
  echo "Available monitors:"
  hyprctl monitors | awk '/^Monitor /{print "  " $2}'
  exit 1
fi

# Create recordings directory
mkdir -p "$DEFAULT_DIR"

# Generate temp filename
TIMESTAMP=$(date +%s)
TMP_FILE="${DEFAULT_DIR}/.recording-${TIMESTAMP}.mp4"

echo "Starting quick recording..."
echo "Monitor: $PRIMARY_MONITOR"
echo "FPS: $DEFAULT_FPS"
echo "Codec: $CODEC (AMD GPU accelerated)"
echo ""
echo "Use 'sokratos-stop-record' to stop recording."

# Start recording in background
wf-recorder \
  -o "$PRIMARY_MONITOR" \
  -r "$DEFAULT_FPS" \
  -c "$CODEC" \
  -a \
  -f "$TMP_FILE" &

REC_PID=$!

# Create lock and state files
echo "$!" > "$LOCK_FILE"
cat > "$STATE_FILE" << EOF
PID=
TMP_FILE=$TMP_FILE
MONITOR=$PRIMARY_MONITOR
START_TIME="$(date '+%Y-%m-%d %H:%M:%S')"
EOF


# Update state file with PID
sed -i "s/PID=/PID=$REC_PID/" "$STATE_FILE"

# Send notification
notify-send "Screen Recording Started" \
  "Recording $PRIMARY_MONITOR at ${DEFAULT_FPS}fps" \
  -t 3000 \
  -i video-x-generic

echo "Recording started with PID: $REC_PID"
echo "Temporary file: $TMP_FILE"
